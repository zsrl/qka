name: Release Package

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # For PyPI trusted publishing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for semantic-release
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Check if release is needed
        id: release-check
        run: |
          # Check if there are any releasable changes
          if uv run semantic-release --noop --strict version; then
            echo "release_needed=true" >> $GITHUB_OUTPUT
          else
            echo "release_needed=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        if: steps.release-check.outputs.release_needed == 'true'
        run: |
          uv run semantic-release version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        if: steps.release-check.outputs.release_needed == 'true'
        run: |
          uv build

      - name: Publish to PyPI
        if: steps.release-check.outputs.release_needed == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Upload artifacts to GitHub Release
        if: steps.release-check.outputs.release_needed == 'true'
        run: |
          # Get the latest tag created by semantic-release
          latest_tag=$(git describe --tags --abbrev=0)
          
          # Upload all built artifacts to the release
          gh release upload "$latest_tag" dist/* --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}